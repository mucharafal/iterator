/*
 * This source file was generated by the Gradle 'init' task
 */

#include <iostream>
#include <stdlib.h>
#include <chrono>
#include "app.h"

int NUMBER_OF_ITERATIONS = 1000000000;
int WHEN_PRINT = NUMBER_OF_ITERATIONS - 2;
int NUMBER_OF_REPETITIONS = 10;

void iterator::Greeter::doIterations() {
    for (int i = 0; i < NUMBER_OF_REPETITIONS; i++) {
        std::cout << innerLoop(WHEN_PRINT - i) << std::endl;
        // auto start = std::chrono::system_clock::now();
        // for (int j = 0; j < NUMBER_OF_ITERATIONS; j++) {
        //     if ((j + i) == WHEN_PRINT) {
        //         auto end = std::chrono::system_clock::now();
        //         auto duration = std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count();
        //         std::cout << duration << std::endl;
        //     }
        // }
    }
}

long iterator::Greeter::innerLoop(int limit) {
    auto start = std::chrono::system_clock::now();
    for (int j = 0; j < NUMBER_OF_ITERATIONS; j++) {
        if (j == limit) {
            std::cout << "In" << std::endl;
            auto end = std::chrono::system_clock::now();
            auto duration = std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count();
            return duration;
        }
    }
    std::cout << "Out" << std::endl;
    return 0;
}

int main () {
    iterator::Greeter greeter;
    greeter.doIterations();
    return 0;
}
