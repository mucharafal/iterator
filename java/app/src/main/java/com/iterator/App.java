/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.iterator;

import java.time.Instant;
import java.util.ArrayList;
import java.util.List;

public class App {
    private static int NUMBER_OF_ITERATIONS = 1000000000;
    private static int WHEN_PRINT = NUMBER_OF_ITERATIONS - 2;
    private static int NUMBER_OF_REPETITIONS = 100;
    public void doIterations() {
        List<Long> inBodyLoopExecutions = new ArrayList<>(NUMBER_OF_REPETITIONS);
        List<Long> inFunctionLoopExecutions = new ArrayList<>(NUMBER_OF_REPETITIONS);
        for (int i = 0; i < NUMBER_OF_REPETITIONS; i++) {
            Instant start = Instant.now();
            for (int j = 0; j < NUMBER_OF_ITERATIONS; j++) {
                if (j == WHEN_PRINT) {
                    Instant end = Instant.now();
                    long time = end.toEpochMilli() - start.toEpochMilli();
                    System.out.println(time);
                    inBodyLoopExecutions.add(time);
                }
            }
            long time = innerLoop(WHEN_PRINT - i);
            inFunctionLoopExecutions.add(time);
            System.out.println(time);
        }
        System.out.println(inBodyLoopExecutions);
        System.out.println(inFunctionLoopExecutions);
    }

    private long innerLoop(int whenPrint) {
        Instant start = Instant.now();
        for (int j = 0; j < NUMBER_OF_ITERATIONS; j++) {
            if (j == whenPrint) {
                Instant end = Instant.now();
                return end.toEpochMilli() - start.toEpochMilli();  
            }
        }
        return 0L;
    }

    public static void main(String[] args) {
        new App().doIterations();
    }
}
